(slice, slice, slice, slice, slice, cell, cell, cell) storage::load_data() inline {
        slice ds = get_data().begin_parse();
        slice owner_address = ds~load_msg_addr();
        slice oracle = ds~load_msg_addr();
        slice info = (ds~load_ref()).begin_parse();
        cell borrow = ds~load_dict();
        cell lend = ds~load_dict();
        cell algebra = ds~load_ref();
        return (owner_address, info~load_msg_addr(), info~load_msg_addr(), info~load_msg_addr(), oracle, borrow, lend, algebra);
}

() storage::save_data(slice owner_address, slice jetton_wallet_x_address, slice jetton_wallet_y_address, slice jetton_wallet_otoken_address, slice oracle, cell borrow, cell lend, cell algebra) impure inline {
        cell info = begin_cell()
                .store_slice(jetton_wallet_x_address)
                .store_slice(jetton_wallet_y_address)
                .store_slice(jetton_wallet_otoken_address)
        .end_cell();
        set_data(
                begin_cell()
                        .store_slice(owner_address)
                        .store_slice(oracle)
                        .store_ref(info)
                        .store_dict(borrow)
                        .store_dict(lend)
                        .store_ref(algebra)
                .end_cell()
        );
}